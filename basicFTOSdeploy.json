{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachine_name": {
            "defaultValue": "fintechossrv",
            "type": "String",
			"metadata": {
				"description": "Name for FintechOS virtual machine host"
			}
        },
		"dbserver_name": {
            "defaultValue": "ftosdbsrv",
            "type": "String",
			"metadata": {
				"description": "Name for FintechOS DB Server Paas"
			}
        },
		"AdminUsername": {
			"defaultValue": "FTOSadmin",
			"type": "String",
			"metadata": {
				"description": "Username to access virtual machine and database server"
			}
		},
		"AdminPassword": {
			"defaultValue": "change_FTOSpassword",
			"type": "securestring",
			"metadata": {
				"description": "Password for bith virtual machine and database server."
			}
		},
        "virtualNetwork_name": {
            "defaultValue": "fintechosvnet",
            "type": "String",
			"metadata": {
				"description": "Virtual network name for virtual machine"
			}
        },
		"vnet_address_space": {
            "defaultValue": "172.16.120.0/24",
            "type": "String",
			"metadata": {
				"description": "Enter virtual network address space in CIDR format."
			}
        },
		"subnet_address_space": {
            "defaultValue": "172.16.120.0/26",
            "type": "String",
			"metadata": {
				"description": "Enter subnet address space in CIDR format. Subnet address should be included in the addresss space of virtual network."
			}
        },
        "storageAccounts_name": {
            "defaultValue": "fintechosstorage",
            "type": "String"
        },
        "databases_name": {
            "defaultValue": "fintechosdb",
            "type": "String",
			"metadata": {
				"description": "Database Name for FintechOS"
			}
        }
    },
    "variables": {
	"addressPrefix": "172.16.120.0/24",
	"subnetPrefix": "172.16.120.0/26",
	"location": "[resourceGroup().location]",
	"scriptParameters": "[concat('-p_DbConnServer ', parameters('dbserver_name'), '.database.windows.net -p_DbConnSqlAuthUser ', parameters('AdminUsername'), ' -p_DbConnSqlAuthPass ', parameters('AdminPassword'), ' -p_DbConnDb ', parameters('databases_name'))]"
	
	},
    "resources": [
        {
            "comments": "Provision template for virtual machine.",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachine_name')]",
            "apiVersion": "2018-06-01",
            "location": "[variables('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[parameters('virtualMachine_name')]",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('https', '://', parameters('storageAccounts_name'), '.blob.core.windows.net', concat('/vhds/', parameters('virtualMachine_name'),'20190207144223.vhd'))]"
                        },
                        "caching": "ReadWrite",
                        "diskSizeGB": 127
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(parameters('virtualMachine_name'),'-data')]",
                            "createOption": "Empty",
                            "vhd": {
                                "uri": "[concat('https', '://', parameters('storageAccounts_name'), '.blob.core.windows.net', concat('/vhds/', parameters('virtualMachine_name'),'-data.vhd'))]"
                            },
                            "caching": "None",
                            "diskSizeGB": 200
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachine_name')]",
                    "adminUsername": "[parameters('AdminUsername')]",
					"adminPassword": "[parameters('AdminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
					},
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachine_name'), '256'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https', '://', parameters('storageAccounts_name'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
			"resources": [
				{
				  "type": "extensions",
				  "name": "CustomScriptExtension",
				  "apiVersion": "2017-03-30",
				  "location": "[variables('location')]",
				  "dependsOn": ["[parameters('virtualMachine_name')]"],
				  "properties": {
					"publisher": "Microsoft.Compute",
					"type": "CustomScriptExtension",
					"typeHandlerVersion": "1.8",
					"autoUpgradeMinorVersion": true,
					"settings": {
					  "fileUris": ["https://raw.githubusercontent.com/valentindumitrescu/FintechOS/master/Fintech_OS.ps1"],
					  "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', 'Fintech_OS.ps1 ',variables('scriptParameters'))]"
					}
				  }
				}
			],		
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachine_name'), '256'))]"
            ]
        },
        {
            "comments": "Provision template for network interface.",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('virtualMachine_name'), '256')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachine_name'), '-ip'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), 'fintechossnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('virtualMachine_name'), '-nsg'))]"
                },
                "primary": true,
                "tapConfigurations": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachine_name'), '-ip'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), 'fintechossnet')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('virtualMachine_name'), '-nsg'))]"
            ]
        },
        {
            "comments": "Provision template for Network Security Group.",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('virtualMachine_name'), '-nsg')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTPS",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 340,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "comments": "Provision template for Public IP address.",
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[concat(parameters('virtualMachine_name'), '-ip')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "tags": {},
            "scale": null,
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('virtualMachine_name')]",
                }
			},
            "dependsOn": []
        },
        {
            "comments": "Provision template for Virtual Network.",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetwork_name')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "scale": null,
            "properties": {
                "addressSpace": {
				    "addressPrefixes": ["[parameters('vnet_address_space')]"]
                },
                "subnets": [
                    {
                        "name": "fintechossnet",
                        "properties": {
                            "addressPrefix": "[parameters('subnet_address_space')]",
                            "delegations": []
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "dependsOn": []
        },
        {
            "comments": "Provision template for SQL Server.",
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[parameters('dbserver_name')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[variables('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "administratorLogin": "[parameters('AdminUsername')]",
				"administratorLoginPassword": "[parameters('AdminPassword')]",
                "version": "12.0"
            },
            "dependsOn": []
        },
        {
            "comments": "Provision template for storage account.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "name": "[parameters('storageAccounts_name')]",
            "apiVersion": "2018-07-01",
            "location": "[variables('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "dependsOn": []
        },
        {
            "comments": "Provision template for HTTP public access rule",
			"type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(parameters('virtualMachine_name'), '-nsg', '/HTTP')]",
            "apiVersion": "2018-10-01",
            "scale": null,
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('virtualMachine_name'), '-nsg'))]"
            ]
        },
        {
            "comments": "Provision template for HTTPS public access rule.",
			"type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(parameters('virtualMachine_name'), '-nsg', '/HTTPS')]",
            "apiVersion": "2018-10-01",
            "scale": null,
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 320,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('virtualMachine_name'), '-nsg'))]"
            ]
        },
        {
            "comments": "Provision template for RDP public access rule.",
			"type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(parameters('virtualMachine_name'), '-nsg', '/RDP')]",
            "apiVersion": "2018-10-01",
            "scale": null,
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 340,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('virtualMachine_name'), '-nsg'))]"
            ]
        },
        {
            "comments": "Provision template for FintechOS subnet.",
			"type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('virtualNetwork_name'), '/', 'fintechossnet')]",
            "apiVersion": "2018-10-01",
            "scale": null,
            "properties": {
                "addressPrefix": "[parameters('subnet_address_space')]",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Sql",
                        "locations": [
                            "[variables('location')]"
                        ]
                    }
                ],
                "delegations": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name'))]"
            ]
        },
        {
            "comments": "Provision template for FintechOS database.",
            "type": "Microsoft.Sql/servers/databases",
            "sku": {
                "name": "S0",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "name": "[concat(parameters('dbserver_name'), '/', parameters('databases_name'))]",
            "apiVersion": "2017-03-01-preview",
            "location": "[variables('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('dbserver_name'))]"
            ]
        },
        {
            "comments": "Provision template for SQL access rule.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "name": "[concat(parameters('dbserver_name'), '/AllowAllWindowsAzureIps')]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('dbserver_name'))]"
            ]
        },
		{
            "comments": "Provision template for SQL access rule - allow FintechOS subnet.",
            "type": "Microsoft.Sql/servers/virtualNetworkRules",
            "name": "[concat(parameters('dbserver_name'), '/AllowFTOS')]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), 'fintechossnet')]",
                "ignoreMissingVnetServiceEndpoint": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('dbserver_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), 'fintechossnet')]"
            ]
        }
    ]
}	
